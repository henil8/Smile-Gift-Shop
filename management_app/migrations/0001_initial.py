# Generated by Django 5.0.4 on 2025-08-25 07:58

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import tinymce_4.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FirmModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HelpAndSupportModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('title', models.CharField(max_length=200)),
                ('description', tinymce_4.fields.TinyMCEModelField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Help & Support',
                'verbose_name_plural': 'Help & Support',
            },
        ),
        migrations.CreateModel(
            name='InquiryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('description', tinymce_4.fields.TinyMCEModelField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Complete', 'Complete')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='NewsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', tinymce_4.fields.TinyMCEModelField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'News',
                'verbose_name_plural': 'News',
            },
        ),
        migrations.CreateModel(
            name='OrderLinesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(default=0.0)),
                ('selling_price', models.FloatField(default=0.0)),
                ('tax_amount', models.FloatField(default=0.0)),
                ('untax_amount', models.FloatField(default=0.0)),
                ('product_total', models.FloatField(default=0.0)),
                ('margin_amount', models.FloatField(default=0.0)),
                ('after_margin_amount', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='OrderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('product_info', models.JSONField(blank=True, null=True)),
                ('order_date', models.DateField(auto_now_add=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('order_status', models.CharField(choices=[('Pending', 'Pending'), ('Out for Delivery', 'Out for Delivery'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled')], default='Pending', max_length=100)),
                ('pay_type', models.CharField(blank=True, choices=[('Cash on Delivery', 'Cash on Delivery'), ('Online Payment', 'Online Payment')], max_length=200, null=True)),
                ('sale_status', models.CharField(choices=[('Quotation', 'Quotation'), ('Quotation Sent', 'Quotation Sent'), ('Sales Order', 'Sales Order'), ('Cancelled', 'Cancelled')], default='Quotation', max_length=255)),
                ('product_total', models.FloatField(default=0.0)),
                ('discount_amt', models.FloatField(default=0.0)),
                ('tax_amt', models.FloatField(default=0.0)),
                ('shipping_amt', models.PositiveIntegerField(default=0)),
                ('final_total', models.FloatField(default=0.0)),
                ('is_paid', models.BooleanField(default=False)),
                ('is_expired', models.BooleanField(default=False)),
                ('is_gift', models.BooleanField(default=False, verbose_name='is a gift?')),
                ('gift_message', models.TextField(blank=True, null=True, verbose_name='gift message')),
                ('applied_voucher_code', models.CharField(blank=True, max_length=25, null=True)),
                ('margin', models.IntegerField(default=0)),
                ('is_ecommerce', models.BooleanField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('source_doc', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('unit', models.CharField(choices=[('pcs', 'Piece'), ('set', 'Set'), ('pair', 'Pair'), ('box', 'Box'), ('pack', 'Pack'), ('dozen', 'Dozen'), ('bundle', 'Bundle'), ('roll', 'Roll'), ('sheet', 'Sheet'), ('book', 'Book'), ('card', 'Card'), ('bottle', 'Bottle'), ('jar', 'Jar')], max_length=100)),
                ('short_name', models.CharField(max_length=255)),
                ('product_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='MRP Rate(Product Price)')),
                ('image1', models.ImageField(default='Products/product.png', upload_to='Products')),
                ('item_code', models.CharField(max_length=100)),
                ('group', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
                ('company_code', models.CharField(blank=True, max_length=100, null=True)),
                ('upc_barcode', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.MaxLengthValidator(13)])),
                ('lan_barcode', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.MaxLengthValidator(13)])),
                ('retailer_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Retailer Price')),
                ('distributer_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Distributer Price')),
                ('super_distributer_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Super Distributer Price')),
                ('gst', models.FloatField(blank=True, default=0, null=True)),
                ('sales_discount', models.FloatField(blank=True, default=0, null=True)),
                ('warranty', models.CharField(max_length=10)),
                ('weight', models.FloatField(default=0, verbose_name='net weight (in gms)')),
                ('web_link', models.URLField(blank=True, null=True)),
                ('video_link', models.URLField(blank=True, null=True)),
                ('feature', models.CharField(blank=True, max_length=100, null=True)),
                ('description', tinymce_4.fields.TinyMCEModelField(blank=True, null=True)),
                ('limited_stock', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10)),
                ('out_of_stock', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=10)),
                ('document', models.FileField(blank=True, null=True, upload_to='Documents')),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('image2', models.ImageField(blank=True, null=True, upload_to='Products')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='Products')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='Products')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='Products')),
                ('product_use_type', models.CharField(choices=[('Consumable', 'Consumable'), ('Service', 'Service'), ('Storable Product', 'Storable Product'), ('Voucher', 'Voucher')], default='', max_length=255)),
                ('product_type', models.CharField(choices=[('Single Product', 'Single Product'), ('Kit', 'Kit')], default='', max_length=255)),
                ('notes', models.TextField(blank=True, help_text='Notes for internal purposes', null=True)),
                ('barcode_image', models.ImageField(blank=True, null=True, upload_to='Barcodes')),
                ('can_be_sold', models.BooleanField(default=True)),
                ('can_be_purchased', models.BooleanField(default=True)),
                ('hsn_code', models.CharField(blank=True, max_length=255, null=True)),
                ('is_tracking', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ThirdPartyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BrandModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('number', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'brand',
                'verbose_name_plural': 'brands',
                'indexes': [models.Index(fields=['name'], name='idx_Brand_name')],
            },
        ),
        migrations.CreateModel(
            name='BusinessCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Business Category',
                'verbose_name_plural': 'Business Categories',
                'indexes': [models.Index(fields=['name'], name='management__name_b28e05_idx')],
            },
        ),
        migrations.CreateModel(
            name='CategoryTagsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'indexes': [models.Index(fields=['name'], name='idx_categorytag_name')],
            },
        ),
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='Categories')),
                ('sub_category_image', models.ImageField(blank=True, null=True, upload_to='Sub Categories')),
                ('is_active', models.BooleanField(default=False)),
                ('sequence', models.IntegerField(blank=True, null=True, unique=True)),
                ('full_pathtext', models.TextField(blank=True, null=True)),
                ('category_tags', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='management_app.categorytagsmodel')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='FeedbackModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('title', models.CharField(max_length=200)),
                ('description', tinymce_4.fields.TinyMCEModelField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'indexes': [models.Index(fields=['email'], name='management__email_5c00a3_idx'), models.Index(fields=['title'], name='management__title_6cecee_idx')],
            },
        ),
    ]
